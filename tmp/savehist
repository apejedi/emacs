;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(face-name-history tmm--history search-ring regexp-history cider-minibuffer-history grep-history buffer-name-history minibuffer-history cider-host-history erc-server-history-list query-replace-history extended-command-history ido-buffer-history file-name-history ido-file-history))
(setq face-name-history '("ctbl:face-row-select" "ctbl:face-cell-select"))
(setq tmm--history '("f==>File" "e==>Edit" "o==>Options" "b==>Buffers" "t==>Tools" "C==>Clojure" "y==>YASnippet" "c==>CIDER" "h==>Help" "f==>File" "e==>Edit" "o==>Options" "b==>Buffers" "t==>Tools" "C==>Clojure" "y==>YASnippet" "c==>CIDER" "h==>Help" "f==>File" "e==>Edit" "o==>Options" "b==>Buffers" "t==>Tools" "C==>Clojure" "y==>YASnippet" "c==>CIDER" "h==>Help" "f==>File" "e==>Edit" "o==>Options" "b==>Buffers" "t==>Tools" "C==>Clojure" "y==>YASnippet" "c==>CIDER" "h==>Help"))
(setq search-ring '("ini" "pattern" "ini" "techno" "te" "techno-p" "show-p" "techno-p" "build-pa" "pat" "techno-p" "scs" "sc" "jav" "load" "scs"))
(setq regexp-history '("with"))
(setq cider-minibuffer-history '("player"))
(setq grep-history '("grep -rni live-add-pack ~/.emacs.d" "grep -rni live-load-pack ~/.emacs.d" "grep -rni clojure-project-dir ~/.emacs.d" "grep -rni clojure-project-dir ~/cider" "grep -rni cider-connections ~/projects/cider" "grep -rni klank ~/projects/overtone" "grep -rni mod-p ~/projects/techno/" "grep -rni mixer ~/projects/overtone" "grep -rni RESULT d:/supercollider/" "grep -rni mixer ~/projects/overtone" "grep -rni defn.*to-sc-id ~/projects/overtone" "grep -rni defn.*to-sc-od ~/projects/overtone" "grep -rni osc-send ~/projects/overtone" "grep -rni osc-listen ~/projects/overtone" "grep -rni osc-server ~/projects/overtone" "grep -rni range ~/projects/overtone" "grep -rni osc ~/projects/overtone" "grep -rni Pbind d:/supercollider/" "grep -rni load-sample ~/projects/overtone" "grep -rni spec-write ~/projects" "grep -rni spec-write ~/projects/overtone" "grep -rni load-synthdef ~/projects/overtone" "grep -rni demand ~/projects/overtone" "grep -rni node-get-control ~/projects/overtone" "grep -rni node-get-control-value ~/projects/overtone" "grep -rni dbamp ~/projects/overtone" "grep -rni range ~/projects/overtone" "grep -rni arp-p ~/projects/techno" "grep -rni build-rest-p ~/projects/techno" "grep -rni inst-mixer ~/projects/overtone" "grep -rni sample ~/projects/overtone" "grep -rni connect-external ~/projects/overtone" "grep -rni mdapiano d:/supercollider/" "grep -rni piano ~/projects/overtone" "grep -rni \"too many users\" d:/supercollider/" "grep -rni \"TOO LOUD\" ~/projects/overtone" "grep -rni TOO\\ LOUD ~/projects/overtone" "grep -rni t_ ~/projects/overtone" "grep -rni def.*ctl ~/projects/overtone" "grep -rni bundle ~/projects/overtone" "grep -rni with-server-sync ~/projects/overtone" "grep -rni metro ~/projects/overtone" "grep -rni klank ~/projects/overtone" "grep -rni names ~/projects/overtone" "grep -rni node-control-range ~/projects/overtone" "grep -rni setn ~/projects/overtone" "grep -rni control.*ugen ~/projects/overtone  grep" "grep -rni defsynth.*control ~/projects/overtone  grep" "grep -rni defsynth.*control ~/projects/overtone  " "grep -rni defsynth.*\\].*\\] ~/projects/overtone  " "grep -rni control ~/projects/overtone  " "grep -rni buffer-write ~/projects/overtone  " "grep -rni buffer ~/projects/overtone  " "grep -rni key-state ~/projects/overtone  " "grep -rni d_free ~/projects/overtone  " "grep -rni named.*control ~/projects/overtone  " "grep -rni control-proxy ~/projects/overtone  " "grep -rni trig-control-ugen ~/projects/overtone  " "grep -rni def.*control-bus ~/projects/overtone  " "grep -rni send-trig ~/projects/overtone  " "grep -rni send-trig ~/projects/overtone-handler  " "grep -rni send-trig ~/projects/osc-clj/  " "grep -rni send-trig ~/projects/overtone  " "grep -rni control ~/projects/overtone  " "grep -rni def.*perc ~/projects/overtone  " "grep -rni scale ~/projects/overtone  " "grep -rni midicps ~/projects/overtone  " "grep -rni def.*midicps ~/projects/overtone  " "grep -rni on-trigger ~/projects/overtone  " "grep -rni osc-list ~/projects/overtone  " "grep -rni def.*osc-list ~/projects/overtone  " "grep -rni defn.*osc-list ~/projects/overtone  " "grep -rni \\(event ~/projects/overtone  " "grep -rni handlers ~/projects/overtone  " "grep -rni on-trigger ~/projects/overtone  " "grep -rni buffer ~/projects/overtone  " "grep -rni klank ~/projects/overtone  " "grep -rni trace ~/projects/overtone  " "grep -rni recv ~/projects/overtone " "grep -rni snd ~/projects/overtone " "grep -rni ctl ~/projects/overtone " "grep -rni delay ~/projects/overtone " "grep -rni ctl ~/projects/overtone " "grep -rni poll ~/projects/overtone " "grep -rni remove-event-handler ~/projects/overtone " "grep -rni on-trigger ~/projects/overtone " "grep -rni tail ~/projects/overtone " "grep -rni def.*load-synth ~/projects/overtone " "grep -rni defmacro.*definst ~/projects/overtone " "grep -rni snare ~/projects/overtone " "grep -rni quick-tick ~/projects/overtone " "grep -nH "))
(setq buffer-name-history '("tekno-pattern" "core.clj" "tekno-pattern" "core.clj" "tekno-pattern" "*nrepl-server techno*" "*cider-repl techno*" "core.clj" "tekno" "tekno_mode.el" "core.clj" "*nrepl-server techno*" "tekno-pattern" "*cider-error*" "*cider-repl techno*" "core.clj" "tekno_mode.el" "core.clj" "tekno_mode.el" "core.clj" "tekno_mode.el" "tekno-pattern" "core.clj" "*nrepl-server techno*" "tekno_mode.el" "core.clj" "tekno" "tekno_mode.el" "sketches.clj" "*Proced*" "core.clj" "tekno_mode.el" "core.clj" "tekno_mode.el" "core.clj" "tekno_mode.el" "core.clj" "tekno" "tekno_mode.el" "core.clj" "tekno" "ctable.el" "tekno" "ctable.el" "clomacs.el" "tekno" "tekno_mode.el" "*Help*" "ctable.el" "*Help*" "ctable.el" "tekno_mode.el" "tekno-pattern" "tekno" "synths.clj" "tekno_mode.el" "tekno-pattern" "tekno_mode.el" "tekno" "core.clj" "synths.clj" "log.org" "synths.clj" "core.clj" "tekno_mode.el" "core.clj" "*Ibuffer*" "tekno_mode.el" "tekno" "tekno_mode.el" "tekno-pattern" "drum_patterns.clj" "sketches.clj" "tekno-pattern" "tekno_mode.el" "tekno-pattern" "sketches.clj" "core.clj" "log.org" "core.clj" "*Proced*" "core.clj" "tekno_mode.el" "tekno" "core.clj" "drum_patterns.clj" "core.clj" "drum_patterns.clj" "tekno" "tekno_mode.el" "motifs.clj" "sketches.clj" "motifs.clj" "core.clj" "synths.clj" "core.clj" "tekno_mode.el" "core.clj" "tekno-pattern" "*nrepl-server techno*"))
(setq minibuffer-history '("KILL" "read-only-mode" "make-ctbl:model" "KILL" "make-overlay" "let*" "nth" "KILL" "overlay-put" "set-face-foreground" "green2" "green6" "green4" "white" "green2" "yellow" "black" "green" "defface" "KILL" "nrepl-sync-request:eval" "defface" "overlay-put" "A" "KILL" "cl-prettyprint" "pp-buffer" "switch-to-buffer" "with-current-buffer" "data-directory" "setf" "count" "incf" "cl" "maphash" "KILL" "pop-to-buffer" "KILL" "TERM" "KILL" "TERM" "KILL" "string=" "cider-connections" "cl-reduce" "cider-connections" "KILL" "cider-connections" "KILL" "load-path" "KILL" "clomacs" "cider" "cider-jack-in" "clomacs" "KILL" "paredit-forward-slurp-sexp" "KILL" "nrepl-request:eval" "cider-eval" "global-undo-tree-mode" "KILL" "dolist" "insert-buffer-substring" "match-string" "string-match" ":" "string-match" "find-file-noselect" "let*" "KILL" "ki" "KILL" "220" "KILL" "KILLi" "KILL" "KILLi" "KILL" "TERM" "KILL" "TERM" "KILL" "ki" "KILL" ")" ";" "," "KILL" "(" "KILL" "INT" "KILL" "116" "KILL" " " "KILL" "comment-region" "KILL" "187"))
(setq cider-host-history '("127.0.0.1"))
(setq query-replace-history '(")
" ")" "]
" "]" "3" "2" "dur" "amp" "4" "3" "3" "4" "5" "4" "" "'" "cr" "cy" "'s" "s" "'o" "o" "'f" "f" "'h" "h" "'r" "r" "'c" "c" "'c" "c" "'k" "k" "'t" "t" "ri" "r" "r" "cy" "cy" "cl" "f" "h" "h" "cl" "cl" "c" "o" "c" "" "^>" "^>" "" "," "val" "(get-val-if-ref pattern)" "pattern" "%" "bpfsaw" "flute" "b" "c" "" "," "," " " " " "" "\\." "\\." "" "." "." "" "[0-9]+" "[0-9]+" "" "[\\\\d]+" "[\\\\d]+" "" "[\\d]+" "[\\d]+" "" "\\\\d+" "\\\\d+" "" "\\d+" "\\d+" "data" "pattern" " " "=" "" "," "NumberBox" "SCNumberBox" "CompositeView" "SCCompositeView" "StaticText"))
(setq extended-command-history '("eshell" "eval-region" "eval-buffer" "cider-eval-buffer" "cider-jack-in" "proced" "cider-quit" "eval-region" "cider-eval-buffer" "cider-jack-in" "proced" "cider-quit" "eval-region" "describe-function" "eval-region" "describe-key" "eval-region" "describe-function" "eval-region" "describe-function" "eval-region" "ibuffer-do-toggle-read-only" "eval-region" "describe-function" "describe-key" "eval-region" "describe-key" "eval-region" "cider-eval-buffer" "eval-region" "save-buffer" "describe-key" "describe-function" "cider-jack-in" "proced" "cider-quit" "eval-region" "describe-function" "eval-region" "describe-function" "eval-region" "describe-function" "desc0" "eval-region" "cider-eval-buffer" "cider-jack-in" "proced" "cider-quit" "eval-region" "describe-function" "describe-key" "eval-region" "describe-key" "eval-region" "describe-key" "eval-region" "describe-key" "eval-region" "describe-key" "eval-region" "describe-function" "set-face-background" "set-face-foreground" "set-face-background" "set-face-foreground" "describe-function" "eval-region" "eval-buffer" "eval-region" "cider-eval-buffer" "cider-jack-in" "proced" "cider-quit" "eval-region" "describe-function" "eval-region" "cider-eval-buffer" "cider-jack-in" "describe-function" "eval-region" "describe-function" "eval-region" "describe-key" "eval-region" "describe-key" "eval-region" "eshell" "proced" "eshell" "proced" "cider-quit" "eshell" "cider-jack-in" "proced" "cider-quit" "eval-region" "describe-function" "eval-region" "describe-function" "replace-string"))
(setq ido-buffer-history '("tekno-pattern" "core.clj" "tekno-pattern" "core.clj" "tekno-pattern" "*nrepl-server techno*" "*cider-repl techno*" "core.clj" "tekno" "tekno_mode.el" "core.clj" "*nrepl-server techno*" "tekno-pattern" "*cider-error*" "*cider-repl techno*" "core.clj" "tekno_mode.el" "core.clj" "tekno_mode.el" "core.clj" "tekno_mode.el" "tekno-pattern" "core.clj" "*nrepl-server techno*" "tekno_mode.el" "core.clj" "tekno" "tekno_mode.el" "sketches.clj" "*Proced*" "core.clj" "tekno_mode.el" "core.clj" "tekno_mode.el" "core.clj" "tekno_mode.el" "core.clj" "tekno" "tekno_mode.el" "core.clj" "tekno" "ctable.el" "tekno" "ctable.el" "clomacs.el" "tekno" "tekno_mode.el" "*Help*" "ctable.el" "*Help*" "ctable.el" "tekno_mode.el" "tekno-pattern" "tekno" "synths.clj" "tekno_mode.el" "tekno-pattern" "tekno_mode.el" "tekno" "core.clj" "synths.clj" "log.org" "synths.clj" "core.clj" "tekno_mode.el" "core.clj" "*Ibuffer*" "tekno_mode.el" "tekno" "tekno_mode.el" "tekno-pattern" "drum_patterns.clj" "sketches.clj" "tekno-pattern" "tekno_mode.el" "tekno-pattern" "sketches.clj" "core.clj" "log.org" "core.clj" "*Proced*" "core.clj" "tekno_mode.el" "tekno" "core.clj" "drum_patterns.clj" "core.clj" "drum_patterns.clj" "tekno" "tekno_mode.el" "motifs.clj" "sketches.clj" "motifs.clj" "core.clj" "synths.clj" "core.clj" "tekno_mode.el" "core.clj" "tekno-pattern" "*nrepl-server techno*"))
(setq file-name-history '("c:/Users/mogwai/projects/techno/src/techno/core.clj" "c:/Users/mogwai/projects/tekno_mode.el" "c:/Users/mogwai/projects/techno/src/techno/sketches.clj" "c:/Users/mogwai/projects/tekno_mode.el" "c:/Users/mogwai/Google Drive/log.org" "c:/Users/mogwai/projects/overtone/src/overtone/music/pitch.clj" "c:/Users/mogwai/.emacs.d/packs/stable/clojure-pack/lib/clomacs/clomacs.el" "c:/Users/mogwai/projects/techno/src/techno/synths.clj" "c:/Users/mogwai/projects/techno/src/techno/drum_patterns.clj" "c:/Users/mogwai/projects/techno/src/techno/motifs.clj" "c:/Users/mogwai/.emacs.d/ctable.el" "c:/Users/mogwai/.emacs" "c:/Users/mogwai/projects/techno/src/techno/core.clj" "c:/Users/mogwai/projects/tekno_mode.el" "c:/Users/mogwai/projects/techno/src/techno/sketches.clj" "~/projects/techno/src/techno/test.clj" "c:/Users/mogwai/.lein/profiles.clj" "c:/Users/mogwai/projects/techno/project.clj" "c:/Users/mogwai/projects/tekno_mode.el" "c:/Users/mogwai/projects/techno/log.txt" "c:/Users/mogwai/projects/techno/src/techno/log.txt" "c:/Users/mogwai/projects/techno/src/techno/samples.clj" "c:/Users/mogwai/projects/techno/src/techno/recorder.clj" "~/projects/" "c:/Users/mogwai/projects/techno/project.clj" "c:/Users/mogwai/.emacs" "c:/Users/mogwai/projects/techno/src/techno/drum_patterns.clj" "c:/Users/mogwai/.emacs.d/packs/stable/clojure-pack/lib/clomacs/clomacs.el" "c:/Users/mogwai/projects/techno/src/techno/motifs.clj" "c:/Users/mogwai/projects/techno/src/techno/core.clj" "c:/Users/mogwai/projects/techno/src/techno/sequencer.clj" "c:/Users/mogwai/.emacs" "c:/Users/mogwai/Google Drive/todo.org" "c:/Users/mogwai/.emacs.d/ctable.el" "c:/Users/mogwai/Google Drive/log.org" "c:/Users/mogwai/projects/tekno_mode.el" "c:/Users/mogwai/projects/techno/src/techno/sketches.clj" "c:/Users/mogwai/projects/techno/src/techno/drum_patterns.clj" "c:/Users/mogwai/.emacs" "~/.emacs.d/ctable.el" "c:/Users/mogwai/projects/techno/src/techno/drum_patterns.clj" "c:/Users/mogwai/projects/techno/src/techno/drums.clj" "c:/Users/mogwai/projects/techno/src/techno/motifs.clj" "c:/Users/mogwai/.emacs.d/packs/stable/clojure-pack/lib/clomacs/clomacs.el" "c:/Users/mogwai/projects/techno/src/techno/core.clj" "c:/Users/mogwai/projects/techno/src/techno/sketches.clj" "c:/Users/mogwai/projects/techno/src/techno/recorder.clj" "c:/Users/mogwai/projects/tekno_mode.el" "c:/Users/mogwai/projects/techno/src/techno/drum_patterns.clj" "c:/Users/mogwai/projects/techno/src/techno/core.clj" "c:/Users/mogwai/projects/techno/src/techno/sequencer.clj" "c:/Users/mogwai/projects/techno/src/techno/sequencer2.clj" "c:/Users/mogwai/projects/techno/src/techno/synths.clj" "c:/Users/mogwai/Google Drive/log.org" "c:/Users/mogwai/projects/techno/src/techno/motifs.clj" "c:/Users/mogwai/projects/techno/src/techno/sketches/house2.clj" "c:/Users/mogwai/projects/techno/src/techno/sketches.clj" "c:/Users/mogwai/projects/techno/src/techno/core.clj" "c:/Users/mogwai/projects/techno/src/techno/sketches.clj" "c:/Users/mogwai/projects/techno/src/techno/motifs.clj" "c:/Users/mogwai/projects/tekno_mode.el" "c:/Users/mogwai/Google Drive/log.org" "c:/Users/mogwai/projects/techno/src/techno/sketches.clj" "c:/Users/mogwai/Google Drive/todo.org" "c:/Users/mogwai/projects/techno/src/techno/controller.clj" "c:/Users/mogwai/projects/techno/src/techno/sequencer.clj" "c:/Users/mogwai/projects/techno/src/techno/sequencer2.clj" "c:/Users/mogwai/projects/tekno_mode.el" "c:/Users/mogwai/.emacs.d/packs/stable/clojure-pack/lib/clomacs/clomacs.el" "c:/Users/mogwai/projects/techno/src/techno/core.clj" "c:/Users/mogwai/projects/techno/src/techno/sketches.clj" "c:/Users/mogwai/projects/techno/src/techno/motifs.clj" "c:/Users/mogwai/projects/techno/src/techno/drums.clj" "c:/Users/mogwai/projects/techno/src/techno/core.clj" "c:/Users/mogwai/.emacs.d/packs/stable/clojure-pack/lib/clomacs/clomacs.el" "c:/Users/mogwai/projects/techno/src/techno/sketches.clj" "c:/Users/mogwai/projects/tekno_mode.el" "~/.emacs.d/packs/stable/clojure-pack/lib/cider/" "c:/Users/mogwai/.emacs.d/packs/stable/clojure-pack/init.el" "c:/Users/mogwai/.emacs.d/packs/stable/clojure-pack/config/cider-conf.el" "c:/Users/mogwai/.emacs.d/packs/stable/clojure-pack/init.el" "c:/Users/mogwai/.emacs.d/packs/stable/clojure-pack/info.el" "c:/Users/mogwai/.emacs.d/lib/live-core.el" "c:/Users/mogwai/.emacs.d/init.el" "c:/Users/mogwai/projects/tekno_mode.el" "c:/Users/mogwai/projects/techno/src/techno/sketches.clj" "c:/Users/mogwai/.emacs.d/packs/stable/clojure-pack/lib/cider/cider-client.el" "c:/Users/mogwai/.emacs.d/packs/stable/clojure-pack/lib/cider/cider.el" "c:/Users/mogwai/.emacs.d/packs/update-live-packs" "c:/Users/mogwai/.emacs" "c:/Users/mogwai/Google Drive/notes.org" "c:/Users/mogwai/.emacs" "c:/Users/mogwai/projects/techno/src/techno/motifs.clj" "c:/Users/mogwai/projects/techno/src/techno/core.clj" "c:/Users/mogwai/projects/techno/src/techno/drum_patterns.clj" "c:/Users/mogwai/projects/techno/src/techno/synths.clj" "c:/Users/mogwai/projects/techno/src/techno/sketches.clj" "c:/Users/mogwai/.emacs" "c:/Users/mogwai/projects/techno/src/techno/sketches.clj" "c:/Users/mogwai/.emacs.d/packs/stable/clojure-pack/lib/clomacs/src/elisp/clomacs.el"))
(setq ido-file-history '("core.clj" "tekno_mode.el" "sketches.clj" "tekno_mode.el" "log.org" "pitch.clj" "clomacs.el" "synths.clj" "drum_patterns.clj" "motifs.clj" "ctable.el" ".emacs" "core.clj" "tekno_mode.el" "sketches.clj" nil "techno/" "profiles.clj" "project.clj" "tekno_mode.el" "log.txt" "samples.clj" "recorder.clj" nil "project.clj" ".emacs" "drum_patterns.clj" "clomacs.el" "motifs.clj" "core.clj" "sequencer.clj" ".emacs" "todo.org" "ctable.el" "log.org" "tekno_mode.el" "sketches.clj" "drum_patterns.clj" ".emacs" nil "drum_patterns.clj" "drums.clj" "motifs.clj" "clomacs.el" nil "core.clj" "sketches.clj" "recorder.clj" "tekno_mode.el" "drum_patterns.clj" "core.clj" "sequencer.clj" "sequencer2.clj" "synths.clj" "log.org" "motifs.clj" "house2.clj" "sketches.clj" "core.clj" "sketches.clj" "motifs.clj" "tekno_mode.el" "log.org" "sketches.clj" "todo.org" "controller.clj" "sequencer.clj" "sequencer2.clj" "tekno_mode.el" "clomacs.el" "core.clj" "sketches.clj" "motifs.clj" "drums.clj" "core.clj" "clomacs.el" "sketches.clj" "tekno_mode.el" "cider/" "init.el" "cider-conf.el" "init.el" "info.el" "live-core.el" "init.el" "tekno_mode.el" "sketches.clj" "cider-client.el" "cider.el" "update-live-packs" ".emacs" "notes.org" ".emacs" "motifs.clj" "core.clj" "drum_patterns.clj" "synths.clj" "sketches.clj" ".emacs" "sketches.clj"))
(setq regexp-search-ring '("render.*cel" "render.*selec" "def.*make-c" "def.*ctbl:make-mo" "def.*scal" "def.*metr" " \\([1-9]?\\)" " \\([1-9]\\)" " \\(\\d\\)" " \\d\\d\\d\\d " " \\(^0000\\) " "0000 \\([^0 ]\\)"))
